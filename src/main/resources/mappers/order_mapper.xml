<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.woofnmeow.wnm_project_back.repository.OrderMapper">

    <resultMap id="ordersMap" type="com.woofnmeow.wnm_project_back.entity.Order">
        <id property="orderId" column="order_id"/>
        <result property="userId" column="user_id"/>
        <result property="orderDate" column="order_date"/>
        <result property="shippingName" column="shipping_name"/>
        <result property="shippingPhone" column="shipping_phone"/>
        <result property="shippingAddressNumber" column="shipping_address_number"/>
        <result property="shippingAddressName" column="shipping_address_name"/>
        <result property="shippingAddressDetailName" column="shipping_address_detail_name"/>
        <result property="orderStatus" column="order_status"/>
    </resultMap>

    <insert id="addOrder" parameterType="com.woofnmeow.wnm_project_back.entity.Order" useGeneratedKeys="true" keyProperty="orderId">
        insert into
            order_tb
        values
            (0, #{userId}, now(), #{shippingName}, #{shippingPhone}, #{shippingAddressNumber}, #{shippingAddressName}, #{shippingAddressDetailName}, 0)
    </insert>

    <insert id="addOrderProducts" parameterType="hashmap">
        insert into
            order_products_tb
        values(0, #{orderId}, #{productDtlId}, #{count})
    </insert>

    <select id="selectOrders" parameterType="hashmap" resultMap="ordersMap">
        select
            ot.order_id,
            ot.user_id,
            ot.order_date,
            ot.shipping_name,
            ot.shipping_phone,
            ot.shipping_address_number,
            ot.shipping_address_name,
            ot.shipping_address_detail_name,
            opt.order_products_id,
            opt.count,
            pdt.product_dtl_id,
            pdt.price,
            st.size_id,
            st.size_name,
            pmt.product_mst_id,
            pmt.product_name,
            pmt.product_thumbnail_url
        from
            order_tb ot
            left outer join order_products_tb opt on(opt.order_id = ot.order_id)
            left outer join product_dtl_tb pdt on(pdt.product_dtl_id = opt.product_dtl_id)
            left outer join size_tb st on(st.size_id = pdt.size_id)
            left outer join product_mst_tb pmt on(pmt.product_mst_id = pdt.product_mst_id)
        where
            user_id = #{userId}
        <choose>
            <when test="searchOption.equals('받는사람')">
                and ot.shipping_name like concat("%", #{searchValue}, "%")
            </when>
            <when test="searchOption.equals('전화번호')">
                and ot.shipping_phone like concat("%", #{searchValue}, "%")
            </when>
            <when test="searchOption.equals('우편번호')">
                and ot.shipping_address_number like concat("%", #{searchValue}, "%")
            </when>
            <when test="searchOption.equals('주소')">
                and (ot.shipping_address_name like concat("%", #{searchValue}, "%")
                    or ot.shipping_address_detail_name like concat("%", #{searchValue}, "%"))
            </when>
            <when test="searchOption.equals('product')">
                and pmt.product_name like concat("%", #{searchValue}, "%")
            </when>
        </choose>
        order by
        <choose>
            <when test="sortOption.equals('일자올림차순')">
                UNIX_TIMESTAMP(order_date) asc
            </when>
            <otherwise>
                UNIX_TIMESTAMP(order_date) desc
            </otherwise>
        </choose>
        limit #{pageIndex}, 10
    </select>

</mapper>
