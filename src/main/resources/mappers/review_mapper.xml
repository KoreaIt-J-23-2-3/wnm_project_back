<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.woofnmeow.wnm_project_back.repository.ReviewMapper">

    <resultMap id="reviewMapForProductMstId" type="com.woofnmeow.wnm_project_back.dto.GetReviewByProductMstIdRespDto">
        <result property="profileUrl" column="profile_url"/>
        <result property="nickname" column="nickname"/>
        <result property="productDtlId" column="product_dtl_id"/>
        <result property="reviewContent" column="review_content"/>
        <result property="reviewImgUrl" column="review_img_url"/>
        <result property="reviewDate" column="review_date"/>
    </resultMap>

    <resultMap id="reviewMapForUserId" type="com.woofnmeow.wnm_project_back.dto.GetReviewByUserIdRespDto">
        <result property="productMstId" column="product_mst_id"/>
        <result property="productDtlId" column="product_dtl_id"/>
        <result property="reviewContent" column="review_content"/>
        <result property="reviewImgUrl" column="review_img_url"/>
        <result property="reviewDate" column="review_date"/>
    </resultMap>



    <insert id="addReview" parameterType="com.woofnmeow.wnm_project_back.entity.Review">
        insert into
            review_tb
        values(0, #{userId}, #{productMstId}, #{productDtlId}, #{reviewContent}, #{reviewImgUrl}, now())
    </insert>


    <update id="editReview"  parameterType="com.woofnmeow.wnm_project_back.entity.Review">
        update
            review_tb
        set
            review_content = #{reviewContent},
            review_img_url = #{reviewImgUrl},
            review_date = now()
        where
            review_id = #{reviewId}
    </update>


    <delete id="deleteReview">
        delete from
            review_tb
        where
            review_id = #{reviewId}
    </delete>


    <select id="selectReviewsByProductMstId" resultMap="reviewMapForProductMstId">
        select
            ut.profile_url,
            ut.nickname,
            rt.product_dtl_id,
            rt.review_content,
            rt.review_img_url,
            rt.review_date
        from
            review_tb rt
            left outer join user_tb ut on(ut.user_id = rt.user_id)
        where
            rt.product_mst_id = #{productMstId}
    </select>

    <select id="selectReviewsByUserId" resultMap="reviewMapForUserId">
        select
            rt.product_mst_id,
            rt.product_dtl_id,
            rt.review_content,
            rt.review_img_url,
            rt.review_date
        from
            review_tb rt
        where
            rt.user_id = #{userId}
    </select>

</mapper>
