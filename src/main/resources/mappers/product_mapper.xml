<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.woofnmeow.wnm_project_back.repository.ProductMapper">

    <resultMap id="productMap" type="com.woofnmeow.wnm_project_back.entity.Product" >

    </resultMap>

    <insert id="addProductMaster" parameterType="com.woofnmeow.wnm_project_back.entity.Product" useGeneratedKeys="true" keyProperty="productMstId">
        insert into
            product_mst_tb
        values(0, #{productName}, #{petTypeId}, #{productCategoryId}, #{productDetailText}, #{productThumbnailUrl}, #{productDetailUrl}, now())
    </insert>

    <insert id="addProductDetail" parameterType="hashmap">
        insert into
            product_dtl_tb
        values(0, #{productMstId}, #{price}, #{sizeId})
    </insert>

    <select id="getProductByProductId" resultMap="productMap">

    </select>

    <update id="updateProduct" parameterType="com.woofnmeow.wnm_project_back.entity.Product">

    </update>

    <delete id="deleteProduct">

    </delete>

    <select id="getProducts" parameterType="hashmap" resultMap="productMap">
        select
            pt.product_id,
            pt.product_name,
            pt.product_price,
            pt.product_detail_text,
            pt.product_thumbnail,
            pt.product_detail_img,
            pt.pet_type_id,
            ptt.pet_type_name,
            pt.product_category_id,
            pct.product_category_name,
            pt.no_size,
            pt.product_size_XS,
            pt.product_size_S,
            pt.product_size_M,
            pt.product_size_L,
            pt.product_size_XL,
            pt.product_size_XXL
        from
            product_tb pt
            left outer join product_category_tb pct on (pct.product_category_id = pt.product_category_id)
            left outer join pet_type_tb ptt on (ptt.pet_type_id = pt.pet_type_id)
        where
            1 = 1
        <choose>
            <when test="searchOption.equals('제목')">
                and pt.product_name like concat("%", #{searchValue}, "%")
            </when>
        </choose>
        <if test="!petTypeName.equals('all')">
            and ptt.pet_type_name = #{petTypeName}
        </if>
        <if test="!productCategoryName.equals('all')">
            and pct.product_category_name = #{productCategoryName}
        </if>
        order by
        <choose>
            <when test="sortOption.equals('낮은가격')">
                product_price asc
            </when>
            <when test="sortOption.equals('높은가격')">
                product_price desc
            </when>
            <when test="sortOption.equals('상품명')">
                product_name COLLATE utf8mb4_unicode_ci
            </when>
            <otherwise>
                product_id desc
            </otherwise>
        </choose>
        limit #{pageIndex}, 10
    </select>

</mapper>